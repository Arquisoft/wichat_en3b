openapi: 3.0.0
info:
  title: Gatewayservice API
  description: Gateway OpenAPI specification for the trivia game application.
  version: 0.2.0
servers:
  - url: http://localhost:8000
    description: Development server
  - url: http://SOMEIP:8000
    description: Production server
paths:
  /adduser:
    post:
      summary: Add a new user to the database.
      operationId: addUser
      tags:
        - User Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        '200':
          description: User added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: User ID
                  password:
                    type: string
                    description: Hashed password
                    example: $2b$10$ZKdNYLWFQxzt5Rei/YTc/OsZNi12YiWz30JeUFHNdAt7MyfmkTuvC
                  _id:
                    type: string
                    description: Identification
                    example: 65f756db3fa22d227a4b7c7d
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
                  ___v:
                    type: integer
                    example: '0'                                        
        '400':
          description: Failed to add user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: getaddrinfo EAI_AGAIN mongodb
  /health:
    get:
      summary: Check the health status of the service.
      operationId: checkHealth
      tags:
        - System
      responses:
        '200':
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Health status.
                    example: OK
  /login:
    post:
      summary: Log in to the system.
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        '200':
          description: Login successful. Returns user token, username, and creation date.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY3NTZkYjNmYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw
                  username:
                    type: string
                    description: Username.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
        '401':
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Shows the error info.
                    example: Invalid credentials
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /logout:
    post:
      summary: Log out from the system.
      operationId: logoutUser
      tags:
        - Authentication
      responses:
        '200':
          description: Logout successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message.
                    example: Logout successful
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /refresh:
    get:
      summary: Refresh the authentication token.
      operationId: refreshToken
      tags:
        - Authentication
      responses:
        '200':
          description: Token refreshed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: New access token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InN0dWRlbnQiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.6JTmywRfXKWgeCmKinEiSLNL8vBxS_M6sSbEBkFwQ9Q
        '401':
          description: Unauthorized. No refresh token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid refresh token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
  /askllm:
    post:
      summary: Send a query to the LLM service.
      operationId: askLLM
      tags:
        - Game
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The question to ask the LLM.
                  example: "Tell me something important about the city in the image."
      responses:
        '200':
          description: Successful response from LLM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: Answer from the LLM.
                    example: "It is the city of love, with some of the most beautiful monuments in the world."
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
  /loadQuestion:
    post:
      summary: Searches for information of the selected topics in Wikidata and loads it in the database.
      operationId: loadQuestion
      tags:
        - Game
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modes:
                  type: array
                  description: List of game topics to load information for.
                  items:
                    type: string
                  example: ["city", "flag", "athlete"]
      responses:
        '200':
          description: Information loaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message.
                    example: "Information loaded successfully"
        '400':
          description: Invalid topics parameter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Invalid topics parameter"
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
        '500':
          description: Error fetching question data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Error fetching question data"
  /getRound:
    get:
      summary: Get a round of questions for the game.
      operationId: getRound
      tags:
        - Game
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Round retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    description: Question for the round.
                    items:
                      type: object
                      properties:
                        mode:
                          type: string
                          description: The mode/category of the question.
                          example: "city"
                        items:
                          type: array
                          description: Possible answers.
                          items:
                            type: string
                          example: ["Paris", "London", "Berlin", "Madrid"]
                        itemWithImage:
                          type: object
                          description: The correct answer.
                          example: {"name": "Paris", "image": "https://example.com/paris.jpg"}
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
  /getTopics:
    get:
      summary: Get available game modes.
      operationId: getTopics
      tags:
        - Game
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Game topics retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  modes:
                    type: array
                    description: List of available game topics.
                    items:
                      type: string
                    example: ["city", "flag", "athlete", "singer"]
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
  /addgame:
    post:
      summary: Add a completed game to the user's history and update statistics.
      operationId: addGame
      tags:
        - User Management
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                questions:
                  type: array
                  description: Array of question objects with results.
                  items:
                    type: object
                    properties:
                      mode:
                        type: string
                        description: Game mode of the question.
                        example: city
                      isCorrect:
                        type: boolean
                        description: Whether the user answered correctly.
                        example: true
                      pointsIncrement:
                        type: integer
                        description: Points earned for this question.
                        example: 10
              required:
                - username
                - questions
      responses:
        '200':
          description: Game added successfully and statistics updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Bad request. Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Missing required field: questions"
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
  /userstats/user/{username}:
    get:
      summary: Get all statistics for a specific user across different game modes.
      operationId: getUserStats
      tags:
        - Statistics
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          description: The username to get statistics for.
          schema:
            type: string
          example: student
      responses:
        '200':
          description: User statistics retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the response.
                    example: "Fetched statistics for user: student"
                  stats:
                    type: array
                    description: List of statistics objects for each game mode.
                    items:
                      $ref: '#/components/schemas/UserStatistics'
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Internal server error"
  /userstats/mode/{mode}:
    get:
      summary: Get statistics for all users in a specific game mode or across all modes.
      operationId: getModeStats
      tags:
        - Statistics
      security:
        - bearerAuth: []
      parameters:
        - name: mode
          in: path
          required: true
          description: The game mode to get statistics for. Use "all" to get combined statistics across all modes.
          schema:
            type: string
          example: city
      responses:
        '200':
          description: Mode statistics retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the response.
                    example: "Fetched statistics for mode: city"
                  stats:
                    type: array
                    description: List of user statistics for the requested mode.
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/UserStatistics'
                        - type: object
                          description: Aggregated statistics across all modes.
                          properties:
                            _id:
                              type: string
                              description: Username used as the aggregation key.
                            username:
                              type: string
                              description: User ID.
                              example: student
                            totalScore:
                              type: integer
                              description: Total score across all modes.
                              example: 350
                            correctRate:
                              type: number
                              description: Average correct rate across all modes.
                              example: 0.85
                            totalQuestions:
                              type: integer
                              description: Total questions answered across all modes.
                              example: 120
                            totalGamesPlayed:
                              type: integer
                              description: Total games played across all modes.
                              example: 15
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Internal server error"
  /userstats/{username}/{mode}:
    get:
      summary: Get statistics for a specific user in a specific game mode or across all modes.
      operationId: getUserModeStats
      tags:
        - Statistics
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          description: The username to get statistics for.
          schema:
            type: string
          example: student
        - name: mode
          in: path
          required: true
          description: The game mode to get statistics for. Use "all" to get combined statistics across all modes.
          schema:
            type: string
          example: city
      responses:
        '200':
          description: User mode statistics retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the response.
                    example: "Fetched statistics for user student in mode city"
                  stats:
                    oneOf:
                      - $ref: '#/components/schemas/UserStatistics'
                      - type: object
                        description: Aggregated statistics for a user across all modes.
                        properties:
                          username:
                            type: string
                            description: User ID.
                            example: student
                          totalScore:
                            type: integer
                            description: Total score across all modes.
                            example: 350
                          correctRate:
                            type: number
                            description: Weighted average correct rate across all modes.
                            example: 0.85
                          totalGamesPlayed:
                            type: integer
                            description: Total games played across all modes.
                            example: 15
                          totalQuestions:
                            type: integer
                            description: Total questions answered across all modes.
                            example: 120
        '401':
          description: Unauthorized. No access token provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Unauthorized
        '403':
          description: Forbidden. Invalid access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid token
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Internal server error"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from the login endpoint
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error
    User:
      type: object
      properties:
        username:
          type: string
          description: User ID
        password:
          type: string
          description: User password (hashed when returned)
      required:
        - username
        - password
    Game:
      type: object
      properties:
        _id:
          type: string
          description: Game ID
          example: 65f756db3fa22d227a4b7c7d
        username:
          type: string
          description: User ID
          example: student
        score:
          type: integer
          description: Total score achieved in the game
          example: 80
        correctRate:
          type: number
          description: Rate of correct answers (0-1)
          example: 0.8
        gameMode:
          type: array
          description: Game modes played in this session
          items:
            type: string
          example: ["city", "flag"]
        createdAt:
          type: string
          description: Game creation date
          example: '2024-03-17T20:47:23.935Z'
      required:
        - username
        - score
        - correctRate
        - gameMode
    UserStatistics:
      type: object
      properties:
        _id:
          type: string
          description: Statistics ID
          example: 65f756db3fa22d227a4b7c7e
        username:
          type: string
          description: User ID
          example: student
        mode:
          type: string
          description: Game mode
          example: city
        totalScore:
          type: integer
          description: Total accumulated score in this mode
          example: 240
        correctRate:
          type: number
          description: Average rate of correct answers (0-1)
          example: 0.82
        totalQuestions:
          type: integer
          description: Total questions answered in this mode
          example: 50
        totalGamesPlayed:
          type: integer
          description: Total games played in this mode
          example: 5
        createdAt:
          type: string
          description: Record creation date
          example: '2024-03-17T20:47:23.935Z'
      required:
        - username
        - mode
        - totalScore
        - correctRate
        - totalQuestions
        - totalGamesPlayed
tags:
  - name: Authentication
    description: Endpoints for user authentication
  - name: User Management
    description: Endpoints for managing users and game records
  - name: Game
    description: Endpoints for game functionality
  - name: Statistics
    description: Endpoints for retrieving game statistics
  - name: System
    description: System-related endpoints